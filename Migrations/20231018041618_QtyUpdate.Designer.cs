// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderManagerEF.Data;

#nullable disable

namespace OrderManagerEF.Migrations
{
    [DbContext(typeof(OMDbContext))]
    [Migration("20231018041618_QtyUpdate")]
    partial class QtyUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OrderManagerEF.Classes.LabelsArchive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressValidatedKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressValidatedValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Reprint")
                        .HasColumnType("bit");

                    b.Property<bool?>("Selected")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("LabelArchives");
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.AddressPart", b =>
                {
                    b.Property<string>("AccountingRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EntryDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtraText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TradingRef")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vAddressParts", (string)null);
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.BINContentsLocn1", b =>
                {
                    b.Property<int>("ActualQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BaseQuantity")
                        .HasColumnType("int");

                    b.Property<string>("BinNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerOrders")
                        .HasColumnType("int");

                    b.Property<int>("FreeStock")
                        .HasColumnType("int");

                    b.Property<string>("PickType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantityOnHand")
                        .HasColumnType("int");

                    b.Property<int>("SupplierOrders")
                        .HasColumnType("int");

                    b.Property<int>("TotalAllocatedInBins")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vBINContents_Locn1", (string)null);
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.BINContentsLocn11", b =>
                {
                    b.Property<int>("ActualQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BaseQuantity")
                        .HasColumnType("int");

                    b.Property<string>("BinNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerOrders")
                        .HasColumnType("int");

                    b.Property<int>("FreeStock")
                        .HasColumnType("int");

                    b.Property<string>("PickType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantityOnHand")
                        .HasColumnType("int");

                    b.Property<int>("SupplierOrders")
                        .HasColumnType("int");

                    b.Property<int>("TotalAllocatedInBins")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vBINContents_Locn11", (string)null);
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.CSCOrderData", b =>
                {
                    b.Property<string>("AccountingRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArchiveFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EntryDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdersCount")
                        .HasColumnType("int");

                    b.Property<string>("PickSlipFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TradingRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZEmployeeGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZShipmentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZShippingMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zsrep")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vASP_CSC_SSI", (string)null);
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.CustomerResult", b =>
                {
                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExistingOrders")
                        .HasColumnType("int");

                    b.Property<int>("NewOrders")
                        .HasColumnType("int");

                    b.Property<int>("TotalOrders")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("ASP_vGetCustomerList", (string)null);
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.DSOrderData", b =>
                {
                    b.Property<string>("AccountingRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArchiveFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EntryDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdersCount")
                        .HasColumnType("int");

                    b.Property<string>("PickSlipFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TradingRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZEmployeeGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZShipmentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZShippingMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zsrep")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vASP_DS_SSI", (string)null);
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.HoldOrderData", b =>
                {
                    b.Property<string>("AccountingRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArchiveFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EntryDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdersCount")
                        .HasColumnType("int");

                    b.Property<string>("PickSlipFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TradingRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZEmployeeGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZShipmentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZShippingMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zsrep")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vASP_HOLD_SSI", (string)null);
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.LabelPrintQueue", b =>
                {
                    b.Property<DateTime>("OrderApprovalDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Printed")
                        .HasColumnType("bit");

                    b.Property<string>("SalesOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vLabelPrintQueue", (string)null);
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.NZOrderData", b =>
                {
                    b.Property<string>("AccountingRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArchiveFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EntryDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdersCount")
                        .HasColumnType("int");

                    b.Property<string>("PickSlipFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TradingRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZEmployeeGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZShipmentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZShippingMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zsrep")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vASP_NZ_SSI", (string)null);
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.OrderLookupResult", b =>
                {
                    b.Property<string>("APN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountingRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ActualQty")
                        .HasColumnType("int");

                    b.Property<string>("BinNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Carrier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConNoteNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultBinCheck")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultBinQtyCheck")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultPickBin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocationNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PickQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PickType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ver")
                        .HasColumnType("int");

                    b.ToTable("OrderLookupResults");
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.PendingBatch", b =>
                {
                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StarShipITAccount")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vPendingBatches", (string)null);
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.PreOrderData", b =>
                {
                    b.Property<string>("AccountingRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArchiveFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EntryDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdersCount")
                        .HasColumnType("int");

                    b.Property<string>("PickSlipFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TradingRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZEmployeeGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZShipmentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZShippingMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zsrep")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vASP_PREORDERS_SSI", (string)null);
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.PrintedOrderData", b =>
                {
                    b.Property<string>("AccountingRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArchiveFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EntryDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdersCount")
                        .HasColumnType("int");

                    b.Property<string>("PickSlipFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TradingRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZEmployeeGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZShipmentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZShippingMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zsrep")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vASP_COMPLETE_SSI", (string)null);
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.ReplenDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FromLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("ReplenId")
                        .HasColumnType("int");

                    b.Property<string>("ToLocation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReplenId");

                    b.ToTable("ReplenDetails");
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.ReplenHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ReplenDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TradingRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ReplenHeaders");
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.ReplenishmentResult", b =>
                {
                    b.Property<DateTime?>("AccountingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AccountingRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BulkBin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("BulkQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationNo")
                        .HasColumnType("int");

                    b.Property<string>("OrderType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RetailBin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("RetailQty")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable("ReplenishmentResults");
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.RubiesOrderData", b =>
                {
                    b.Property<string>("AccountingRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArchiveFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EntryDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdersCount")
                        .HasColumnType("int");

                    b.Property<string>("PickSlipFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TradingRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZEmployeeGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZShipmentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZShippingMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zsrep")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vASP_RUB_SSI", (string)null);
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.RubiesOver5OrderData", b =>
                {
                    b.Property<string>("AccountingRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArchiveFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EntryDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdersCount")
                        .HasColumnType("int");

                    b.Property<string>("PickSlipFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TradingRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZEmployeeGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZShipmentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZShippingMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zsrep")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vASP_RUB_SSI_OVER5", (string)null);
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.SampleOrderData", b =>
                {
                    b.Property<string>("AccountingRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ArchiveFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EntryDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabelFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrdersCount")
                        .HasColumnType("int");

                    b.Property<string>("PickSlipFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TradingRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZEmployeeGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZShipmentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZShippingMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zsrep")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vASP_SAMPLES_SSI", (string)null);
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.ScanPackReportLookup", b =>
                {
                    b.Property<string>("APN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Carrier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompletionFlag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConNoteNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeliverQty")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeliveryDateAvG")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FulfillmentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InvDateAvG")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PickQty")
                        .HasColumnType("int");

                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ShipDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShipQty")
                        .HasColumnType("int");

                    b.ToTable("ScanPackReportLookups");
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.ScanPackReportOverview", b =>
                {
                    b.Property<string>("AccountingRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Carrier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompleteFlag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConNoteNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ver")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vScanPackReportOverview", (string)null);
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.StarShipITOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Carrier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarrierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationPostCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationSuburb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ReturnOrder")
                        .HasColumnType("bit");

                    b.Property<bool?>("Selected")
                        .HasColumnType("bit");

                    b.Property<long?>("ShipmentID")
                        .HasColumnType("bigint");

                    b.Property<string>("ShippingMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SignatureRequired")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("StarShipITOrders");
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.StarShipITOrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("QuantityToShip")
                        .HasColumnType("int");

                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("StarShipITOrderDetails");
                });

            modelBuilder.Entity("OrderManagerEF.Entities.Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressValidatedKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressValidatedValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("OrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Reprint")
                        .HasColumnType("bit");

                    b.Property<bool?>("Selected")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Labels");
                });

            modelBuilder.Entity("OrderManagerEF.Entities.PBin", b =>
                {
                    b.Property<int>("BinID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BinID"));

                    b.Property<string>("BinNumber")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool?>("BondedGoods")
                        .HasColumnType("bit");

                    b.Property<bool?>("Consignment")
                        .HasColumnType("bit");

                    b.Property<string>("CustomerID")
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)");

                    b.Property<int?>("Location")
                        .HasColumnType("int");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<bool?>("Unavailable")
                        .HasColumnType("bit");

                    b.Property<decimal?>("WeightCapacity")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BinID");

                    b.ToTable("PBINS", "dbo");
                });

            modelBuilder.Entity("OrderManagerEF.Entities.PBinContent", b =>
                {
                    b.Property<int>("BinContentsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BinContentsID"));

                    b.Property<decimal?>("ActualQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BaseQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BinID")
                        .HasColumnType("int");

                    b.Property<string>("ProductID")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)");

                    b.Property<int?>("UnitNumber")
                        .HasColumnType("int");

                    b.HasKey("BinContentsID");

                    b.ToTable("PBINCONTENTS");
                });

            modelBuilder.Entity("OrderManagerEF.Entities.Product", b =>
                {
                    b.Property<string>("UniqueID")
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)")
                        .HasColumnName("UniqueID");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("ProductCode");

                    b.Property<string>("ProductTitle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ProductTitle");

                    b.HasKey("UniqueID");

                    b.ToTable("PRODUCTS");
                });

            modelBuilder.Entity("OrderManagerEF.Entities.StarShipITAPIKeyManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OcpApimSubscriptionKey")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Ocp_Apim_Subscription_Key");

                    b.Property<string>("StarShipITApiKey")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("StarShipIT_Api_Key");

                    b.HasKey("Id");

                    b.ToTable("StarShipITAPIKeyManager", "dbo");
                });

            modelBuilder.Entity("OrderManagerEF.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrinterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OrderManagerEF.Entities.UserActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActivityDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserActivities");
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.ReplenDetail", b =>
                {
                    b.HasOne("OrderManagerEF.DTOs.ReplenHeader", "ReplenHeader")
                        .WithMany("ReplenDetails")
                        .HasForeignKey("ReplenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReplenHeader");
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.StarShipITOrderDetail", b =>
                {
                    b.HasOne("OrderManagerEF.DTOs.StarShipITOrder", "StarShipITOrder")
                        .WithMany("StarShipITOrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StarShipITOrder");
                });

            modelBuilder.Entity("OrderManagerEF.Entities.UserActivity", b =>
                {
                    b.HasOne("OrderManagerEF.Entities.User", "User")
                        .WithMany("Activities")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.ReplenHeader", b =>
                {
                    b.Navigation("ReplenDetails");
                });

            modelBuilder.Entity("OrderManagerEF.DTOs.StarShipITOrder", b =>
                {
                    b.Navigation("StarShipITOrderDetails");
                });

            modelBuilder.Entity("OrderManagerEF.Entities.User", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}
